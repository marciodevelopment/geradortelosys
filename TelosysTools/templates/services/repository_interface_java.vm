package ${target.javaPackageFromFolder(${SRC})};
import ${ROOT_PKG}.entities.${entity.name};

import java.util.Map;
import java.util.Optional;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import br.org.curitiba.ici.saude.common.query.QuerySearch;
import br.org.curitiba.ici.saude.common.query.SearchRepository;

#set($updateAttributes = [])
#set($existsSearch = false)

#foreach ($attribute in $entity.nonKeyAttributes)
    #if ($attribute.hasTag('web') && $attribute.tagValue('web').contains('pesquisa'))
     #set($existsSearch = true)
    #end
    #if ($attribute.hasTag('web') && $attribute.tagValue('web').contains('put'))
      #if ($updateAttributes.add($attribute))
      #end
    #end
#end



public interface ${entity.name}Repository
    extends JpaRepository<${entity.name}Entity, Integer>, SearchRepository<${entity.name}PesquisaView> {
#if ($existsSearch)
  @QuerySearch(columns = "colunasPesquisa", query = """
      from ${entity.name} e
      where  1 = 1
      and cd$entity.name = :cd$entity.name
                """, viewResult = ${entity.name}PesquisaView.class)
  @Override
  public Page<${entity.name}PesquisaView> search(Map<String, Object> parameters, Pageable pageable);

#end
  @Override
  @Query(value = """
          select e
          from ${entity.name} e
          where e.cd$entity.name = ?1
      """)
  public Optional<${entity.name}Entity> findById(Integer cd${entity.name});
}
